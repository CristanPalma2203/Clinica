<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pEuQ7fteAAAAAElFTkSuQmCC
</value>
  </data>
</root>