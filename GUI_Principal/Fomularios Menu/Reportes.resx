<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuGradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zMm8ogAAAABJRU5ErkJggg==
</value>
  </data>
</root>